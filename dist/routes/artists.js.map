{"version":3,"file":"artists.js","sourceRoot":"","sources":["../../routes/artists.ts"],"names":[],"mappings":"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","sourcesContent":["import * as express from \"express\";\r\nimport Artist from \"../models/artist\";\r\n\r\nlet router = express.Router();\r\n\r\n//get all artists\r\nrouter.get(\"/\", (req, res) => {\r\n  Artist.find()\r\n  .then((artists) => {\r\n    res.json(artists);\r\n  })\r\n  .catch((err) => {\r\n    res.json(err);\r\n  })\r\n});\r\n\r\n//get artist by id\r\nrouter.get(\"/:id\", (req, res) => {\r\n  Artist.findOne({ _id: req.params.id })\r\n  .then((foundArtist) => {\r\n    res.json(foundArtist);\r\n  })\r\n  .catch((err) => {\r\n    res.json(err);\r\n  });\r\n});\r\n\r\n//add a new artist\r\nrouter.post(\"/\", (req, res) => {\r\n  let newArtist = new Artist();\r\n\r\n  //newArtist.name = req.body.name;\r\n  newArtist.firstname = req.body.firstname;\r\n  newArtist.lastname = req.body.lastname;\r\n  newArtist.email = req.body.email;\r\n  newArtist.zip = req.body.zip;\r\n  newArtist.artist_since = req.body.artist_since;\r\n  newArtist.businessname = req.body.businessname;\r\n  newArtist.businesstype = req.body.businesstype;\r\n  newArtist.phone = req.body.phone;\r\n  newArtist.pricing = req.body.pricing;\r\n  newArtist.style = req.body.style;\r\n  newArtist.bio = req.body.bio;\r\n\r\n  newArtist.save()\r\n  .then((createdArtist) => {\r\n    res.json(createdArtist);\r\n  })\r\n  .catch((err) => {\r\n    res.json(err);\r\n  });\r\n});\r\n\r\n// update Artist by id\r\nrouter.put(\"/:id\", (req, res) => {\r\n  Artist.findOne({ _id: req.params.id })\r\n  .then((updatedArtist) => {\r\n    updatedArtist.firstname = req.body.firstname;\r\n    updatedArtist.lastname = req.body.lastname;\r\n    updatedArtist.email = req.body.email;\r\n    updatedArtist.zip = req.body.zip;\r\n    updatedArtist.artist_since = req.body.artist_since;\r\n    updatedArtist.businessname = req.body.businessname;\r\n    updatedArtist.businesstype = req.body.businesstype;\r\n    updatedArtist.phone = req.body.phone;\r\n    updatedArtist.pricing = req.body.pricing;\r\n    updatedArtist.style = req.body.style;\r\n    updatedArtist.bio = req.body.bio;\r\n\r\n    updatedArtist.save()\r\n    .then((updatedArtist) => {\r\n      res.json(updatedArtist);\r\n    })\r\n    .catch((err) => {\r\n      res.json(err);\r\n    });\r\n  })\r\n.catch((err) => {\r\n  res.json(err);\r\n  });\r\n});\r\n\r\n//delete artist by id\r\nrouter.delete(\"/:id\", (req, res) => {\r\n  Artist.remove({ _id: req.params.id })\r\n  .then((deletedArtist) => {\r\n    res.json(deletedArtist);\r\n  })\r\n  .catch((err) => {\r\n    res.json(err);\r\n  });\r\n});\r\n\r\nexport default router;\r\n"]}